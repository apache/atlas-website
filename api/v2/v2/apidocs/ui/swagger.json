{
  "swagger": "2.0",
  "info" : {
    "description" : "Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.",
    "license" : {
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.txt",
      "name" : "The Apache Software License, Version 2.0"
    },
    "version" : "1.0.0",
    "title" : "Atlas REST API"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "DiscoveryREST"
      ,
      "description" : "REST interface for data discovery using dsl or full text search."
    }
    ,
    {
      "name" : "EntityREST"
      ,
      "description" : "REST for a single entity."
    }
    ,
    {
      "name" : "LineageREST"
      ,
      "description" : "REST interface for an entity's lineage information."
    }
    ,
    {
      "name" : "RelationshipREST"
      ,
      "description" : "REST interface for entity relationships."
    }
    ,
    {
      "name" : "TypesREST"
      ,
      "description" : "REST interface for CRUD operations on type definitions."
    }
  ],
  "definitions" : {
    "json_AtlasBaseModelObject" : {
      "type" : "object",
      "title" : "AtlasBaseModelObject",
          "properties" : {
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "guid" : "..."
},
      "description" : ""
    }
    ,
    "json_AtlasClassification" : {
      "type" : "object",
      "title" : "AtlasClassification",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AtlasStruct"
        },
        {
        }
      ],
      "example" : {
  "typeName" : "...",
  "attributes" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : "An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity."
    }
    ,
    "json_AtlasStruct" : {
      "type" : "object",
      "title" : "AtlasStruct",
          "properties" : {
            "typeName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "attributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            }
          },
      "example" : {
  "typeName" : "...",
  "attributes" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : "Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification."
    }
    ,
    "json_ClassificationAssociateRequest" : {
      "type" : "object",
      "title" : "ClassificationAssociateRequest",
          "properties" : {
            "classification" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_AtlasClassification"
            },
            "entityGuids" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "classification" : {
    "typeName" : "...",
    "attributes" : {
      "property1" : { },
      "property2" : { }
    }
  },
  "entityGuids" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_PList" : {
      "type" : "object",
      "title" : "PList",
          "properties" : {
            "list" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "startIndex" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "pageSize" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "sortType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SortType"
            },
            "sortBy" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "sortType" : "NONE",
  "sortBy" : "..."
},
      "description" : "Paginated-list, for returning search results."
    }
    ,
    "json_SearchFilter" : {
      "type" : "object",
      "title" : "SearchFilter",
          "properties" : {
            "params" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "startIndex" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "maxRows" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "getCount" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "sortBy" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_SortType"
            }
          },
      "example" : {
  "params" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "startIndex" : 12345,
  "maxRows" : 12345,
  "getCount" : true,
  "sortBy" : "...",
  "sortType" : "ASC"
},
      "description" : "Generic filter, to specify search criteria using name/value pairs."
    }
    ,
    "json_SortType" : {
      "type" : "string",
      "title" : "SortType",
          "enum" : [
            "NONE",
            "ASC",
            "DESC"
          ],
      "description" : "to specify whether the result should be sorted? If yes, whether asc or desc."
    }
    ,
    "xml_ns0_atlasBaseModelObject" : {
      "type" : "object",
      "xml" : {
        "name" : "atlasBaseModelObject",
        "namespace" : ""
      },
      "title" : "atlasBaseModelObject",
      "allOf" : [
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_PList" : {
      "type" : "object",
      "xml" : {
        "name" : "PList",
        "namespace" : ""
      },
      "title" : "PList",
      "allOf" : [
        {
          "properties" : {
            "list" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "pageSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "sortBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_sortType"
            },
            "startIndex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : "Paginated-list, for returning search results."
    }
    ,
    "xml_ns0_searchFilter" : {
      "type" : "object",
      "xml" : {
        "name" : "searchFilter",
        "namespace" : ""
      },
      "title" : "searchFilter",
      "allOf" : [
        {
          "properties" : {
            "getCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "maxRows" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "params" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "sortBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_sortType"
            },
            "startIndex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : "Generic filter, to specify search criteria using name/value pairs."
    }
    ,
    "xml_ns0_sortType" : {
      "type" : "string",
      "title" : "sortType",
          "enum" : [
            "NONE",
            "ASC",
            "DESC"
          ],
      "description" : "to specify whether the result should be sorted? If yes, whether asc or desc."
    }
    ,
    "xml_ns0_atlasClassification" : {
      "type" : "object",
      "xml" : {
        "name" : "atlasClassification",
        "namespace" : ""
      },
      "title" : "atlasClassification",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_atlasStruct"
        },
        {
        }
      ],
      "description" : "An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity."
    }
    ,
    "xml_ns0_atlasStruct" : {
      "type" : "object",
      "xml" : {
        "name" : "atlasStruct",
        "namespace" : ""
      },
      "title" : "atlasStruct",
      "allOf" : [
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "typeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification."
    }
  },
  "paths": {
    "\/v2/entity" : {
      "post" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Create new entity or update existing entity in Atlas.",
        "description" : "Create new entity or update existing entity in Atlas.\nExisting entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "EntityMutationResponse"
          }
        }
      }
    }
    ,
    "\/v2/entity/bulk" : {
      "delete" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Bulk API to delete list of entities identified by its GUIDs.",
        "description" : "Bulk API to delete list of entities identified by its GUIDs",
        "operationId" : "deleteByGuids",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Bulk API to retrieve list of entities identified by its GUIDs.",
        "description" : "Bulk API to retrieve list of entities identified by its GUIDs.",
        "operationId" : "getByGuids",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Bulk API to create new entities or update existing entities in Atlas.",
        "description" : "Bulk API to create new entities or update existing entities in Atlas.\nExisting entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/entity/bulk/classification" : {
      "post" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Bulk API to associate a tag to multiple entities.",
        "description" : "Bulk API to associate a tag to multiple entities",
        "operationId" : "addClassification",
        "consumes" : [ "application/json", "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ClassificationAssociateRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/v2/entity/guid/{guid}" : {
      "delete" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Delete an entity identified by its GUID.",
        "description" : "Delete an entity identified by its GUID.",
        "operationId" : "deleteByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "GUID for the entity"
          }
        ],
        "responses" : {
          "204" : {
            "description" : "EntityMutationResponse"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Fetch complete definition of an entity given its GUID.",
        "description" : "Fetch complete definition of an entity given its GUID.",
        "operationId" : "getById",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "GUID for the entity"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "AtlasEntity"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Entity Partial Update - Add/Update entity attribute identified by its GUID.",
        "description" : "Entity Partial Update - Add/Update entity attribute identified by its GUID.\nSupports only uprimitive attribute type and entity references.\ndoes not support updation of complex types like arrays, maps\nNull updates are not possible",
        "operationId" : "partialUpdateEntityAttrByGuid",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "name",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/entity/guid/{guid}/classification/{classificationName}" : {
      "delete" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Deletes a given classification from an existing entity represented by a guid.",
        "description" : "Deletes a given classification from an existing entity represented by a guid.",
        "operationId" : "deleteClassification",
        "parameters" : [
          {
            "name" : "classificationName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "name of the classifcation"
          },
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "globally unique identifier for the entity"
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Gets the list of classifications for a given entity represented by a guid.",
        "description" : "Gets the list of classifications for a given entity represented by a guid.",
        "operationId" : "getClassification",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "classificationName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "globally unique identifier for the entity"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "classification for the given entity guid"
          }
        }
      }
    }
    ,
    "\/v2/entity/guid/{guid}/classifications" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Gets the list of classifications for a given entity represented by a guid.",
        "description" : "Gets the list of classifications for a given entity represented by a guid.",
        "operationId" : "getClassifications",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "globally unique identifier for the entity"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "a list of classifications for the given entity guid"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Adds classifications to an existing entity represented by a guid.",
        "description" : "Adds classifications to an existing entity represented by a guid.",
        "operationId" : "addClassifications",
        "consumes" : [ "application/json", "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "globally unique identifier for the entity"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AtlasClassification"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Updates classifications to an existing entity represented by a guid.",
        "description" : "Updates classifications to an existing entity represented by a guid.",
        "operationId" : "updateClassification",
        "consumes" : [ "application/xml", "application/json" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "globally unique identifier for the entity"
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AtlasClassification"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/v2/entity/uniqueAttribute/type/{typeName}" : {
      "delete" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Delete an entity identified by its type and unique attributes.",
        "description" : "Delete an entity identified by its type and unique attributes.",
        "operationId" : "deleteByUniqueAttribute",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "typeName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "- entity type to be deleted"
          }
        ],
        "responses" : {
          "204" : {
            "description" : "EntityMutationResponse"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Fetch complete definition of an entity given its type and unique attribute.",
        "description" : "Fetch complete definition of an entity given its type and unique attribute.",
        "operationId" : "getByUniqueAttributes",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "typeName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "description" : "AtlasEntityWithExtInfo"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "EntityREST" ],
        "summary" : "Entity Partial Update - Allows a subset of attributes to be updated on\nan entity which is identified by its type and unique attribute  eg: Referenceable.",
        "description" : "Entity Partial Update - Allows a subset of attributes to be updated on\nan entity which is identified by its type and unique attribute  eg: Referenceable.qualifiedName.\nNull updates are not possible",
        "operationId" : "partialUpdateEntityByUniqueAttrs",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "typeName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/lineage/{guid}" : {
      "get" : {
        "tags" : [ "LineageREST" ],
        "summary" : "Returns lineage info about entity.",
        "description" : "Returns lineage info about entity.",
        "operationId" : "getLineageGraph",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "- unique entity id"
          },
          {
            "name" : "depth",
            "in" : "query",
            "default" : "3",
            "type" : "integer",
            "format" : "int32",
            "description" : "- number of hops for lineage"
          },
          {
            "name" : "direction",
            "in" : "query",
            "default" : "BOTH",
            "type" : "string",
            "enum" : ["BOTH", "INPUT", "OUTPUT"],
            "description" : "- input, output or both"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "If Lineage exists for the given entity"
          },
          "400" : {
            "description" : "Bad query parameters"
          },
          "404" : {
            "description" : "If no lineage is found for the given entity"
          }
        }
      }
    }
    ,
    "\/v2/relationship" : {
      "post" : {
        "tags" : [ "RelationshipREST" ],
        "summary" : "Create a new relationship between entities.",
        "description" : "Create a new relationship between entities.",
        "operationId" : "create",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "RelationshipREST" ],
        "summary" : "Update an existing relationship between entities.",
        "description" : "Update an existing relationship between entities.",
        "operationId" : "update",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/relationship/guid/{guid}" : {
      "delete" : {
        "tags" : [ "RelationshipREST" ],
        "summary" : "Delete a relationship between entities using guid.",
        "description" : "Delete a relationship between entities using guid.",
        "operationId" : "deleteById",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "RelationshipREST" ],
        "summary" : "Get relationship information between entities using guid.",
        "description" : "Get relationship information between entities using guid.",
        "operationId" : "getById2",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/search/attribute" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Retrieve data for the specified attribute search query.",
        "description" : "Retrieve data for the specified attribute search query",
        "operationId" : "searchUsingAttribute",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "attrName",
            "in" : "query",
            "type" : "string",
            "description" : "Attribute name"
          },
          {
            "name" : "attrValuePrefix",
            "in" : "query",
            "type" : "string",
            "description" : "Attibute value to search on"
          },
          {
            "name" : "limit",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "limit the result set to only include the specified number of entries"
          },
          {
            "name" : "offset",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "start offset of the result set (useful for pagination)"
          },
          {
            "name" : "typeName",
            "in" : "query",
            "type" : "string",
            "description" : "limit the result to only entities of specified type or its sub-types"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful FullText lookup with some results, might return an empty list if execution succeeded\nwithout any results"
          },
          "400" : {
            "description" : "Invalid wildcard or query parameters"
          }
        }
      }
    }
    ,
    "\/v2/search/basic" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Retrieve data for the specified fulltext query.",
        "description" : "Retrieve data for the specified fulltext query",
        "operationId" : "searchUsingBasic",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "classification",
            "in" : "query",
            "type" : "string",
            "description" : "limit the result to only entities tagged with the given classification or or its sub-types"
          },
          {
            "name" : "excludeDeletedEntities",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "limit",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "limit the result set to only include the specified number of entries"
          },
          {
            "name" : "offset",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "start offset of the result set (useful for pagination)"
          },
          {
            "name" : "query",
            "in" : "query",
            "type" : "string",
            "description" : "Fulltext query"
          },
          {
            "name" : "typeName",
            "in" : "query",
            "type" : "string",
            "description" : "limit the result to only entities of specified type or its sub-types"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful FullText lookup with some results, might return an empty list if execution succeeded\nwithout any results"
          },
          "400" : {
            "description" : "Invalid fulltext or query parameters"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Attribute based search for entities satisfying the search parameters.",
        "description" : "Attribute based search for entities satisfying the search parameters",
        "operationId" : "searchWithParameters",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : "Search parameters"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful search"
          },
          "400" : {
            "description" : "Tag/Entity doesn't exist or Tag/entity filter is present without tag/type name"
          }
        }
      }
    }
    ,
    "\/v2/search/dsl" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Retrieve data for the specified DSL.",
        "description" : "Retrieve data for the specified DSL",
        "operationId" : "searchUsingDSL",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "classification",
            "in" : "query",
            "type" : "string",
            "description" : "limit the result to only entities tagged with the given classification or or its sub-types"
          },
          {
            "name" : "limit",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "limit the result set to only include the specified number of entries"
          },
          {
            "name" : "offset",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "start offset of the result set (useful for pagination)"
          },
          {
            "name" : "query",
            "in" : "query",
            "type" : "string",
            "description" : "DSL query"
          },
          {
            "name" : "typeName",
            "in" : "query",
            "type" : "string",
            "description" : "limit the result to only entities of specified type or its sub-types"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful DSL execution with some results, might return an empty list if execution succeeded\nwithout any results"
          },
          "400" : {
            "description" : "Invalid DSL or query parameters"
          }
        }
      }
    }
    ,
    "\/v2/search/fulltext" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Retrieve data for the specified fulltext query.",
        "description" : "Retrieve data for the specified fulltext query",
        "operationId" : "searchUsingFullText",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "excludeDeletedEntities",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "limit",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "limit the result set to only include the specified number of entries"
          },
          {
            "name" : "offset",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "start offset of the result set (useful for pagination)"
          },
          {
            "name" : "query",
            "in" : "query",
            "type" : "string",
            "description" : "Fulltext query"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful FullText lookup with some results, might return an empty list if execution succeeded\nwithout any results"
          },
          "400" : {
            "description" : "Invalid fulltext or query parameters"
          }
        }
      }
    }
    ,
    "\/v2/search/relationship" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Relationship search to search for related entities satisfying the search parameters.",
        "description" : "Relationship search to search for related entities satisfying the search parameters",
        "operationId" : "searchRelatedEntities",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "excludeDeletedEntities",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "guid",
            "in" : "query",
            "type" : "string",
            "description" : "Attribute name"
          },
          {
            "name" : "limit",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "limit the result set to only include the specified number of entries"
          },
          {
            "name" : "offset",
            "in" : "query",
            "type" : "integer",
            "format" : "int32",
            "description" : "start offset of the result set (useful for pagination)"
          },
          {
            "name" : "relation",
            "in" : "query",
            "type" : "string",
            "description" : "relationName"
          },
          {
            "name" : "sortBy",
            "in" : "query",
            "type" : "string",
            "description" : "sort the result using this attribute name, default value is 'name'"
          },
          {
            "name" : "sortOrder",
            "in" : "query",
            "type" : "string",
            "enum" : ["ASCENDING", "DESCENDING"],
            "description" : "sorting order"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful search"
          },
          "400" : {
            "description" : "guid is not a valid entity type or attributeName is not a valid relationship attribute"
          }
        }
      }
    }
    ,
    "\/v2/search/saved" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "",
        "operationId" : "getSavedSearches",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "user",
            "in" : "query",
            "type" : "string",
            "description" : "User for whom the search is retrieved"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "list of all saved searches for given user"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "",
        "operationId" : "addSavedSearch",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "the saved search-object"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "",
        "operationId" : "updateSavedSearch",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "the updated search-object"
          }
        }
      }
    }
    ,
    "\/v2/search/saved/execute/guid/{guid}" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Attribute based search for entities satisfying the search parameters.",
        "description" : "Attribute based search for entities satisfying the search parameters",
        "operationId" : "executeSavedSearchByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Guid identifying saved search"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Atlas search result"
          }
        }
      }
    }
    ,
    "\/v2/search/saved/execute/{name}" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "summary" : "Attribute based search for entities satisfying the search parameters.",
        "description" : "Attribute based search for entities satisfying the search parameters",
        "operationId" : "executeSavedSearchByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "name of saved-search"
          },
          {
            "name" : "user",
            "in" : "query",
            "type" : "string",
            "description" : "saved-search owner"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Atlas search result"
          }
        }
      }
    }
    ,
    "\/v2/search/saved/{guid}" : {
      "delete" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "",
        "operationId" : "deleteSavedSearch",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Name of the saved search"
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/v2/search/saved/{name}" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "",
        "operationId" : "getSavedSearch",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Name of the saved search"
          },
          {
            "name" : "user",
            "in" : "query",
            "type" : "string",
            "description" : "User for whom the search is retrieved"
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    }
    ,
    "\/v2/types/classificationdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the classification definition for the given guid.",
        "description" : "Get the classification definition for the given guid",
        "operationId" : "getClassificationDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "classification guid"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the classification definition by it's guid"
          },
          "404" : {
            "description" : "On Failed lookup for the given guid"
          }
        }
      }
    }
    ,
    "\/v2/types/classificationdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the classification definition by it's name (unique).",
        "description" : "Get the classification definition by it's name (unique)",
        "operationId" : "getClassificationDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "classification name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the classification definition by it's name"
          },
          "404" : {
            "description" : "On Failed lookup for the given name"
          }
        }
      }
    }
    ,
    "\/v2/types/entitydef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the Entity definition for the given guid.",
        "description" : "Get the Entity definition for the given guid",
        "operationId" : "getEntityDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "entity guid"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the entity definition by it's guid"
          },
          "404" : {
            "description" : "On Failed lookup for the given guid"
          }
        }
      }
    }
    ,
    "\/v2/types/entitydef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the entity definition by it's name (unique).",
        "description" : "Get the entity definition by it's name (unique)",
        "operationId" : "getEntityDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "entity name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the entity definition by it's name"
          },
          "404" : {
            "description" : "On Failed lookup for the given name"
          }
        }
      }
    }
    ,
    "\/v2/types/enumdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the enum definition for the given guid.",
        "description" : "Get the enum definition for the given guid",
        "operationId" : "getEnumDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "enum guid"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the enum definition by it's guid"
          },
          "404" : {
            "description" : "On Failed lookup for the given guid"
          }
        }
      }
    }
    ,
    "\/v2/types/enumdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the enum definition by it's name (unique).",
        "description" : "Get the enum definition by it's name (unique)",
        "operationId" : "getEnumDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "enum name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the enum definition by it's name"
          },
          "404" : {
            "description" : "On Failed lookup for the given name"
          }
        }
      }
    }
    ,
    "\/v2/types/relationshipdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the relationship definition for the given guid.",
        "description" : "Get the relationship definition for the given guid",
        "operationId" : "getRelationshipDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "relationship guid"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the relationship definition by it's guid"
          },
          "404" : {
            "description" : "On Failed lookup for the given guid"
          }
        }
      }
    }
    ,
    "\/v2/types/relationshipdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the relationship definition by it's name (unique).",
        "description" : "Get the relationship definition by it's name (unique)",
        "operationId" : "getRelationshipDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "relationship name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the relationship definition by it's name"
          },
          "404" : {
            "description" : "On Failed lookup for the given name"
          }
        }
      }
    }
    ,
    "\/v2/types/structdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the struct definition for the given guid.",
        "description" : "Get the struct definition for the given guid",
        "operationId" : "getStructDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "struct guid"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the struct definition by it's guid"
          },
          "404" : {
            "description" : "On Failed lookup for the given guid"
          }
        }
      }
    }
    ,
    "\/v2/types/structdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get the struct definition by it's name (unique).",
        "description" : "Get the struct definition by it's name (unique)",
        "operationId" : "getStructDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "struct name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful lookup of the the struct definition by it's name"
          },
          "404" : {
            "description" : "On Failed lookup for the given name"
          }
        }
      }
    }
    ,
    "\/v2/types/typedef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "",
        "operationId" : "getTypeDefByGuid",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "GUID of the type"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful lookup"
          },
          "404" : {
            "description" : "Failed lookup"
          }
        }
      }
    }
    ,
    "\/v2/types/typedef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Get type definition by it's name.",
        "description" : "Get type definition by it's name",
        "operationId" : "getTypeDefByName",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "Type name"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Successful lookup by name"
          },
          "404" : {
            "description" : "Failed lookup by name"
          }
        }
      }
    }
    ,
    "\/v2/types/typedefs" : {
      "delete" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Bulk delete API for all types.",
        "description" : "Bulk delete API for all types",
        "operationId" : "deleteAtlasTypeDefs",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : "A composite object that captures all types to be deleted"
          }
        ],
        "responses" : {
          "204" : {
            "description" : "On successful deletion of the requested type definitions"
          },
          "400" : {
            "description" : "On validation failure for any type definitions"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Bulk retrieval API for retrieving all type definitions in Atlas.",
        "description" : "Bulk retrieval API for retrieving all type definitions in Atlas",
        "operationId" : "getAllTypeDefs",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "description" : "AtlasTypesDef with type definitions matching the search criteria or else returns empty list of type definitions"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Bulk create APIs for all atlas type definitions, only new definitions will be created.",
        "description" : "Bulk create APIs for all atlas type definitions, only new definitions will be created.\nAny changes to the existing definitions will be discarded",
        "operationId" : "createAtlasTypeDefs",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : "A composite wrapper object with corresponding lists of the type definition"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful update of requested type definitions"
          },
          "400" : {
            "description" : "On validation failure for any type definitions"
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Bulk update API for all types, changes detected in the type definitions would be persisted.",
        "description" : "Bulk update API for all types, changes detected in the type definitions would be persisted",
        "operationId" : "updateAtlasTypeDefs",
        "consumes" : [ "application/json;charset=UTF-8" ],
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "type" : "file",
            "description" : "A composite object that captures all type definition changes"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "On successful update of requested type definitions"
          },
          "400" : {
            "description" : "On validation failure for any type definitions"
          }
        }
      }
    }
    ,
    "\/v2/types/typedefs/headers" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "summary" : "Bulk retrieval API for all type definitions returned as a list of minimal information header.",
        "description" : "Bulk retrieval API for all type definitions returned as a list of minimal information header",
        "operationId" : "getTypeDefHeaders",
        "produces" : [ "application/json;charset=UTF-8" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of AtlasTypeDefHeader matching the search criteria\nor an empty list if no match."
          }
        }
      }
    }
  }
}
