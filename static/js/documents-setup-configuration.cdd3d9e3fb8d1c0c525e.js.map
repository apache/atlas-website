{"version":3,"sources":["/Users/keval/projects/atlas/atlas/docs/target/src/documents/Setup/Configuration.md","/Users/keval/projects/atlas/atlas/docs/target/theme/styles/styled-colors.js"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","wrapLines","language","style","theme","themen","isMDXComponent","dark","hljs","color"],"mappings":"wjBAcMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,mBAAQ,CACN,GAAM,qDADR,qDAGA,2KAAwJ,oBAAIC,WAAW,KAAf,QAAxJ,yEACA,mBAAQ,CACN,GAAM,iBADR,iBAGA,mBAAQ,CACN,GAAM,oCADR,oCAGA,oEAAiD,iCAAGA,WAAW,KAAQ,CACnE,KAAQ,4BADqC,cAAjD,4DAEoF,iCAAGA,WAAW,KAAQ,CACtG,KAAQ,uEADwE,QAFpF,sBAKA,cAAC,IAAD,CAAmBC,WAAW,EAAMC,SAAS,QAAQC,MAAOC,IAAYL,QAAQ,qBAAhF,6HAKA,0IACA,mNAEA,mBAAQ,CACN,GAAM,6BADR,6BAGA,mVAGA,mBAAQ,CACN,GAAM,6BADR,6BAGA,+LACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOE,IAAQN,QAAQ,qBAA3E,ohBAWA,mBAAQ,CACN,GAAM,mDADR,qDAGA,sLACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,8MAKA,mBAAQ,CACN,GAAM,kBADR,kBAGA,gMACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,2PAMA,mBAAQ,CACN,GAAM,wBADR,wBAGA,gCAAa,iCAAGC,WAAW,KAAQ,CAC/B,KAAQ,6DADC,4DAAb,sFAGA,cAAC,IAAD,CAAmBC,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,syBAkBA,mBAAQ,CACN,GAAM,kBADR,kBAGA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,uKAMA,mBAAQ,CACN,GAAM,uBADR,uBAGA,mBAAQ,CACN,GAAM,cADR,cAGA,oFACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,yBAGA,mBAAQ,CACN,GAAM,gCADR,gCAGA,6GACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,srEAmCA,mBAAQ,CACN,GAAM,qBADR,qBAGA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,wJAIA,mBAAQ,CACN,GAAM,mCADR,mCAGA,0HACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,OAAOC,MAAOC,IAAYL,QAAQ,qBAA/E,i6CAqBA,mBAAQ,CACN,GAAM,iCADR,iCAGA,0KACA,cAAC,IAAD,CAAmBE,WAAW,EAAMC,SAAS,MAAMC,MAAOC,IAAYL,QAAQ,qBAA9E,mgB,0LAkBJH,EAAWU,gBAAiB,G,+DC/N5B,gFAqBAC,IAAKC,KAAKC,MAAQ,UACHF,MAAf","file":"static/js/documents-setup-configuration.0f36cd0d.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"configuring-apache-atlas---application-properties\"\n    }}>{`Configuring Apache Atlas - Application Properties`}</h1>\n    <p>{`All configuration in Atlas uses java properties style configuration. The main configuration file is atlas-application.properties which is in the `}<em parentName=\"p\">{`conf`}</em>{` dir at the deployed location. It consists of the following sections:`}</p>\n    <h2 {...{\n      \"id\": \"graph-configs\"\n    }}>{`Graph Configs`}</h2>\n    <h3 {...{\n      \"id\": \"graph-persistence-engine---hbase\"\n    }}>{`Graph Persistence engine - HBase`}</h3>\n    <p>{`Set the following properties to configure `}<a parentName=\"p\" {...{\n        \"href\": \"https://janusgraph.org/\"\n      }}>{`JanusGraph`}</a>{` to use HBase as the persistence engine. Please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"http://docs.janusgraph.org/0.2.0/configuration.html#_hbase_caching\"\n      }}>{`link`}</a>{` for more details.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"shell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.storage.backend=hbase\natlas.graph.storage.hostname=<ZooKeeper Quorum>\natlas.graph.storage.hbase.table=atlas`}\n    </SyntaxHighlighter>\n    <p>{`If any further JanusGraph configuration needs to be setup, please prefix the property name with \"atlas.graph.\".`}</p>\n    <p>{`In addition to setting up configurations, please ensure that environment variable HBASE_CONF_DIR is setup to point to\nthe directory containing HBase configuration file hbase-site.xml.`}</p>\n    <h3 {...{\n      \"id\": \"graph-index-search-engine\"\n    }}>{`Graph Index Search Engine`}</h3>\n    <p>{`An index search engine is required for ATLAS. This search engine runs separately from the ATLAS server and from the\nstorage backend. Only two search engines are currently supported: Solr and Elasticsearch. Pick the search engine\nbest suited for your environment and follow the configuration instructions below.`}</p>\n    <h4 {...{\n      \"id\": \"graph-search-index---solr\"\n    }}>{`Graph Search Index - Solr`}</h4>\n    <p>{`Solr installation in Cloud mode is a prerequisite for Apache Atlas use. Set the following properties to configure JanusGraph to use Solr as the index search engine.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={themen} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.index.search.backend=solr5\natlas.graph.index.search.solr.mode=cloud\natlas.graph.index.search.solr.wait-searcher=true\n# ZK quorum setup for solr as comma separated value. Example: 10.1.6.4:2181,10.1.6.5:2181\natlas.graph.index.search.solr.zookeeper-url=\n# SolrCloud Zookeeper Connection Timeout. Default value is 60000 ms\natlas.graph.index.search.solr.zookeeper-connect-timeout=60000\n# SolrCloud Zookeeper Session Timeout. Default value is 60000 ms\natlas.graph.index.search.solr.zookeeper-session-timeout=60000`}\n    </SyntaxHighlighter>\n    <h4 {...{\n      \"id\": \"graph-search-index---elasticsearch-tech-preview\"\n    }}>{`Graph Search Index - Elasticsearch (Tech Preview)`}</h4>\n    <p>{`Elasticsearch is a prerequisite for Apache Atlas use. Set the following properties to configure JanusGraph to use Elasticsearch as the index search engine.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.index.search.backend=elasticsearch\natlas.graph.index.search.hostname=<hostname(s) of the Elasticsearch master nodes comma separated>\natlas.graph.index.search.elasticsearch.client-only=true`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"search-configs\"\n    }}>{`Search Configs`}</h2>\n    <p>{`Search APIs (DSL, basic search, full-text search) support pagination and have optional limit and offset arguments. Following configs are related to search pagination`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`# Default limit used when limit is not specified in API\natlas.search.defaultlimit=100\n# Maximum limit allowed in API. Limits maximum results that can be fetched to make sure the atlas server doesn't run out of memory\natlas.search.maxlimit=10000`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"notification-configs\"\n    }}>{`Notification Configs`}</h2>\n    <p>{`Refer `}<a parentName=\"p\" {...{\n        \"href\": \"http://kafka.apache.org/documentation.html#configuration\"\n      }}>{`http://kafka.apache.org/documentation.html#configuration`}</a>{` for Kafka configuration. All Kafka configs should be prefixed with 'atlas.kafka.'`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`\natlas.kafka.auto.commit.enable=false\n#Kafka servers. Example: localhost:6667\natlas.kafka.bootstrap.servers=\natlas.kafka.hook.group.id=atlas\n#Zookeeper connect URL for Kafka. Example: localhost:2181\natlas.kafka.zookeeper.connect=\natlas.kafka.zookeeper.connection.timeout.ms=30000\natlas.kafka.zookeeper.session.timeout.ms=60000\natlas.kafka.zookeeper.sync.time.ms=20\n#Setup the following configurations only in test deployments where Kafka is started within Atlas in embedded mode\n#atlas.notification.embedded=true\n#atlas.kafka.data={sys:atlas.home}/data/kafka\n#Setup the following two properties if Kafka is running in Kerberized mode.\n#atlas.notification.kafka.service.principal=kafka/_HOST@EXAMPLE.COM\n#atlas.notification.kafka.keytab.location=/etc/security/keytabs/kafka.service.keytab`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"client-configs\"\n    }}>{`Client Configs`}</h2>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.client.readTimeoutMSecs=60000\natlas.client.connectTimeoutMSecs=60000\n# URL to access Atlas server. For example: http://localhost:21000\natlas.rest.address=`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"security-properties\"\n    }}>{`Security Properties`}</h2>\n    <h3 {...{\n      \"id\": \"ssl-config\"\n    }}>{`SSL config`}</h3>\n    <p>{`The following property is used to toggle the SSL feature.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\natlas.enableTLS=false\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"high-availability-properties\"\n    }}>{`High Availability Properties`}</h2>\n    <p>{`The following properties describe High Availability related configuration options:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`\n# Set the following property to true, to enable High Availability. Default = false.\natlas.server.ha.enabled=true\n# Specify the list of Atlas instances\natlas.server.ids=id1,id2\n# For each instance defined above, define the host and port on which Atlas server listens.\natlas.server.address.id1=host1.company.com:21000\natlas.server.address.id2=host2.company.com:31000\n# Specify Zookeeper properties needed for HA.\n# Specify the list of services running Zookeeper servers as a comma separated list.\natlas.server.ha.zookeeper.connect=zk1.company.com:2181,zk2.company.com:2181,zk3.company.com:2181\n# Specify how many times should connection try to be established with a Zookeeper cluster, in case of any connection issues.\natlas.server.ha.zookeeper.num.retries=3\n# Specify how much time should the server wait before attempting connections to Zookeeper, in case of any connection issues.\natlas.server.ha.zookeeper.retry.sleeptime.ms=1000\n# Specify how long a session to Zookeeper should last without inactiviy to be deemed as unreachable.\natlas.server.ha.zookeeper.session.timeout.ms=20000\n# Specify the scheme and the identity to be used for setting up ACLs on nodes created in Zookeeper for HA.\n# The format of these options is <scheme:identity>.\n# For more information refer to \nhttp://zookeeper.apache.org/doc/r3.2.2/zookeeperProgrammers.html#sc_ZooKeeperAccessControl\n# The 'acl' option allows to specify a scheme, identity pair to setup an ACL for.\natlas.server.ha.zookeeper.acl=sasl:client@comany.com\n# The 'auth' option specifies the authentication that should be used for connecting to Zookeeper.\natlas.server.ha.zookeeper.auth=sasl:client@company.com\n# Since Zookeeper is a shared service that is typically used by many components,\n# it is preferable for each component to set its znodes under a namespace.\n# Specify the namespace under which the znodes should be written. Default = /apache_atlas\natlas.server.ha.zookeeper.zkroot=/apache_atlas\n# Specify number of times a client should retry with an instance before selecting another active instance, or failing an operation.\natlas.client.ha.retries=4\n# Specify interval between retries for a client.\natlas.client.ha.sleep.interval.ms=5000`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"server-properties\"\n    }}>{`Server Properties`}</h2>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`# Set the following property to true, to enable the setup steps to run on each server start. Default = false.\natlas.server.run.setup.on.start=false`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"performance-configuration-items\"\n    }}>{`Performance configuration items`}</h2>\n    <p>{`The following properties can be used to tune performance of Atlas under specific circumstances:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"bash\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`\n# The number of times Atlas code tries to acquire a lock (to ensure consistency) while committing a transaction.\n# This should be related to the amount of concurrency expected to be supported by the server. For e.g. with retries set to 10, upto 100 threads can concurrently create types in the Atlas system.\n# If this is set to a low value (default is 3), concurrent operations might fail with a PermanentLockingException.\natlas.graph.storage.lock.retries=10\n# Milliseconds to wait before evicting a cached entry. This should be > atlas.graph.storage.lock.wait-time x atlas.graph.storage.lock.retries\n# If this is set to a low value (default is 10000), warnings on transactions taking too long will occur in the Atlas application log.\natlas.graph.storage.cache.db-cache-time=120000\n# Minimum number of threads in the atlas web server\natlas.webserver.minthreads=10\n# Maximum number of threads in the atlas web server\natlas.webserver.maxthreads=100\n# Keepalive time in secs for the thread pool of the atlas web server\natlas.webserver.keepalivetimesecs=60\n# Queue size for the requests(when max threads are busy) for the atlas web server\natlas.webserver.queuesize=100\n# Set to the property to true to enable warn on no relationships defined between entities on a particular attribute\n# Not having relationships defined can lead to performance loss while adding new entities\natlas.relationships.warnOnNoRelationships=false`}\n    </SyntaxHighlighter>\n    <h3 {...{\n      \"id\": \"recording-performance-metrics\"\n    }}>{`Recording performance metrics`}</h3>\n    <p>{`To enable performance logs for various Atlas operations (like REST API calls, notification processing), setup the following in atlas-log4j.xml:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"xml\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`<appender name=\"perf_appender\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n  <param name=\"File\" value=\"/var/log/atlas/atlas_perf.log\"/>\n  <param name=\"datePattern\" value=\"'.'yyyy-MM-dd\"/>\n  <param name=\"append\" value=\"true\"/>\n  <layout class=\"org.apache.log4j.PatternLayout\">\n    <param name=\"ConversionPattern\" value=\"%d|%t|%m%n\"/>\n  </layout>\n</appender>\n <logger name=\"org.apache.atlas.perf\" additivity=\"false\">\n   <level value=\"debug\"/>\n   <appender-ref ref=\"perf_appender\"/>\n </logger>`}\n    </SyntaxHighlighter>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}