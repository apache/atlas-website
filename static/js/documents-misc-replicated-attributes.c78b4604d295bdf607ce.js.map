{"version":3,"sources":["/Users/keval/projects/atlas/patch-commit/docs/target/src/documents/Misc/ReplicatedAttributes.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mYAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mBAAQ,CACN,GAAM,yBADR,yBAGA,mBAAQ,CACN,GAAM,cADR,cAGA,uMACA,qFAAkE,oBAAIC,WAAW,KAAf,iBAAlE,qBAAiI,oBAAIA,WAAW,KAAf,kBAAjI,QAAoL,oBAAIA,WAAW,KAAf,gBAApL,M,gMAKJJ,EAAWK,gBAAiB","file":"static/js/documents-misc-replicated-attributes.71da324d.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"replicated-attributes\"\n    }}>{`Replicated Attributes`}</h1>\n    <h4 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h4>\n    <p>{`Users want knowledge of how the entities have landed into Atlas instance, if they were created via hook ingestion or whether they were imported from another Atlas instance.`}</p>\n    <p>{`This is addressed by 2 new attributes that are now part of `}<em parentName=\"p\">{`Referenceable`}</em>{` entity type viz. `}<em parentName=\"p\">{`replicatedFrom`}</em>{` and `}<em parentName=\"p\">{`replicatedTo`}</em>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}