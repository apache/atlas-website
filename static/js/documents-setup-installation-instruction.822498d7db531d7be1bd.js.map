{"version":3,"sources":["/Users/keval/projects/atlas/patch-commit/docs/target/src/documents/Setup/InstallationInstruction.md","/Users/keval/projects/atlas/patch-commit/docs/target/theme/styles/styled-colors.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","wrapLines","language","style","theme","parentName","isMDXComponent","dark","hljs","color"],"mappings":"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","file":"static/js/documents-setup-installation-instruction.afa29628.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h3 {...{\n      \"id\": \"installing--running-apache-atlas\"\n    }}>{`Installing & Running Apache Atlas`}</h3>\n    <h4 {...{\n      \"id\": \"installing-apache-atlas\"\n    }}>{`Installing Apache Atlas`}</h4>\n    <p>{`From the directory you would like Apache Atlas to be installed, run the following commands:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`tar -xzvf apache-atlas-{project.version}-server.tar.gz\ncd atlas-{project.version}`}\n    </SyntaxHighlighter>\n    <h4 {...{\n      \"id\": \"running-apache-atlas-with-local-apache-hbase--apache-solr\"\n    }}>{`Running Apache Atlas with Local Apache HBase & Apache Solr`}</h4>\n    <p>{`To run Apache Atlas with local Apache HBase & Apache Solr instances that are started/stopped along with Atlas start/stop, run following commands:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`export MANAGE_LOCAL_HBASE=true\nexport MANAGE_LOCAL_SOLR=true\nbin/atlas_start.py`}\n    </SyntaxHighlighter>\n    <h4 {...{\n      \"id\": \"using-apache-atlas\"\n    }}>{`Using Apache Atlas`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`To verify if Apache Atlas server is up and running, run curl command as shown below:`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} style={theme.dark} mdxType=\"SyntaxHighlighter\">\n    {`curl -u username:password http://localhost:21000/api/atlas/admin/version\n    {\"Description\":\"Metadata Management and Data Governance Platform over Hadoop\",\"Version\":\"1.0.0\",\"Name\":\"apache-atlas\"}`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`Run quick start to load sample model and data`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n  {`bin/quick_start.py\nEnter username for atlas :-\nEnter password for atlas :-`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`Access Apache Atlas UI using a browser: `}<a parentName=\"li\" {...{\n          \"href\": \"http://localhost:21000\"\n        }}>{`http://localhost:21000`}</a></li>\n    </ul>\n    <h4 {...{\n      \"id\": \"stopping-apache-atlas-server\"\n    }}>{`Stopping Apache Atlas Server`}</h4>\n    <p>{`To stop Apache Atlas, run following command:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`bin/atlas_stop.py`}\n    </SyntaxHighlighter>\n    <h3 {...{\n      \"id\": \"configuring-apache-atlas\"\n    }}>{`Configuring Apache Atlas`}</h3>\n    <p>{`By default config directory used by Apache Atlas is `}<em parentName=\"p\">{`{package dir}/conf`}</em>{`. To override this set environment variable ATLAS_CONF to the path of the conf dir.`}</p>\n    <p>{`Environment variables needed to run Apache Atlas can be set in `}<em parentName=\"p\">{`atlas-env.sh`}</em>{` file in the conf directory. This file will be sourced by Apache Atlas scripts before any commands are executed. The following environment variables are available to set.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\n#export JAVA_HOME=\nany additional java opts you want to set. This will apply to both client and server operations\n#export ATLAS_OPTS=\nany additional java opts that you want to set for client only\n#export ATLAS_CLIENT_OPTS=\njava heap size we want to set for the client. Default is 1024MB\n#export ATLAS_CLIENT_HEAP=\nany additional opts you want to set for atlas service.\n#export ATLAS_SERVER_OPTS=\njava heap size we want to set for the atlas server. Default is 1024MB\n#export ATLAS_SERVER_HEAP=\nWhat is is considered as atlas home dir. Default is the base location of the installed software\n#export ATLAS_HOME_DIR=\nWhere log files are stored. Defatult is logs directory under the base install location\n#export ATLAS_LOG_DIR=\nWhere pid files are stored. Defatult is logs directory under the base install location\n#export ATLAS_PID_DIR=\nWhere do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n#export ATLAS_EXPANDED_WEBAPP_DIR=`}\n    </SyntaxHighlighter>\n    <p><em parentName=\"p\">{`Settings to support large number of metadata objects`}</em></p>\n    <p>{`If you plan to store large number of metadata objects, it is recommended that you use values tuned for better GC performance of the JVM.`}</p>\n    <p>{`The following values are common server side options:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`export ATLAS_SERVER_OPTS=\"-server -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+PrintTenuringDistribution -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=dumps/atlas_server.hprof -Xloggc:logs/gc-worker.log -verbose:gc -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1m -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps\"`}\n    </SyntaxHighlighter>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-XX:SoftRefLRUPolicyMSPerMB`}</inlineCode>{` option was found to be particularly helpful to regulate GC performance for query heavy workloads with many concurrent users.`}</p>\n    <p>{`The following values are recommended for JDK 8:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\nexport ATLAS_SERVER_HEAP=\"-Xms15360m -Xmx15360m -XX:MaxNewSize=5120m -XX:MetaspaceSize=100M -XX:MaxMetaspaceSize=512m\"\n    </SyntaxHighlighter>\n    <p><em parentName=\"p\">{`NOTE for Mac OS users`}</em>{`\nIf you are using a Mac OS, you will need to configure the ATLAS_SERVER_OPTS (explained above).`}</p>\n    <p>{`In `}<em parentName=\"p\">{`{package dir}/conf/atlas-env.sh`}</em>{` uncomment the following line`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`export ATLAS_SERVER_OPTS=`}\n    </SyntaxHighlighter>\n    <p>{`and change it to look as below`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`export ATLAS_SERVER_OPTS=\"-Djava.awt.headless=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=\"`}\n    </SyntaxHighlighter>\n    <h4 {...{\n      \"id\": \"configuring-apache-hbase-as-the-storage-backend-for-the-graph-repository\"\n    }}>{`Configuring Apache HBase as the storage backend for the Graph Repository`}</h4>\n    <p>{`By default, Apache Atlas uses JanusGraph as the graph repository and is the only graph repository implementation available currently. Apache HBase versions currently supported are 1.1.x. For configuring Apache Atlas graph persistence on Apache HBase, please see \"Graph persistence engine - HBase\" in the `}<a parentName=\"p\" {...{\n        \"href\": \"#/Configuration\"\n      }}>{`Configuration`}</a>{` section for more details.`}</p>\n    <p>{`Apache HBase tables used by Apache Atlas can be set using the following configurations:`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.storage.hbase.table=atlas\natlas.audit.hbase.tablename=apache_atlas_entity_audit`}\n    </SyntaxHighlighter>\n    <h4 {...{\n      \"id\": \"configuring-apache-solr-as-the-indexing-backend-for-the-graph-repository\"\n    }}>{`Configuring Apache Solr as the indexing backend for the Graph Repository`}</h4>\n    <p>{`By default, Apache Atlas uses JanusGraph as the graph repository and is the only graph repository implementation available currently. For configuring JanusGraph to work with Apache Solr, please follow the instructions below`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Install Apache Solr if not already running. The version of Apache Solr supported is 5.5.1. Could be installed from `}<a parentName=\"li\" {...{\n          \"href\": \"http://archive.apache.org/dist/lucene/solr/5.5.1/solr-5.5.1.tgz\"\n        }}>{`http://archive.apache.org/dist/lucene/solr/5.5.1/solr-5.5.1.tgz`}</a></li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Start Apache Solr in cloud mode.`}</li>\n    </ul>\n    <p>{`SolrCloud mode uses a ZooKeeper Service as a highly available, central location for cluster management. For a small cluster, running with an existing ZooKeeper quorum should be fine. For larger clusters, you would want to run separate multiple ZooKeeper quorum with at least 3 servers.\nNote: Apache Atlas currently supports Apache Solr in \"cloud\" mode only. \"http\" mode is not supported. For more information, refer Apache Solr documentation - `}<a parentName=\"p\" {...{\n        \"href\": \"https://cwiki.apache.org/confluence/display/solr/SolrCloud\"\n      }}>{`https://cwiki.apache.org/confluence/display/solr/SolrCloud`}</a></p>\n    <ul>\n      <li parentName=\"ul\">{`For e.g., to bring up an Apache Solr node listening on port 8983 on a machine, you can use the command:`}</li>\n    </ul>\n  <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n    {`$SOLR_HOME/bin/solr start -c -z <zookeeper_host:port> -p 8983`}\n  </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`Run the following commands from SOLR_BIN (e.g. $SOLR_HOME/bin) directory to create collections in Apache Solr corresponding to the indexes that Apache Atlas uses. In the case that the Apache Atlas and Apache Solr instances are on 2 different hosts, first copy the required configuration files from ATLAS_HOME/conf/solr on the Apache Atlas instance host to Apache Solr instance host. SOLR_CONF in the below mentioned commands refer to the directory where Apache Solr configuration files have been copied to on Apache Solr host:`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n  {`$SOLR_BIN/solr create -c vertex_index -d SOLR_CONF -shards #numShards -replicationFactor #replicationFactor\n$SOLR_BIN/solr create -c edge_index -d SOLR_CONF -shards #numShards -replicationFactor #replicationFactor\n$SOLR_BIN/solr create -c fulltext_index -d SOLR_CONF -shards #numShards -replicationFactor #replicationFactor`}\n    </SyntaxHighlighter>\n    <p>{`  Note: If numShards and replicationFactor are not specified, they default to 1 which suffices if you are trying out solr with ATLAS on a single node instance.\nOtherwise specify numShards according to the number of hosts that are in the Solr cluster and the maxShardsPerNode configuration.\nThe number of shards cannot exceed the total number of Solr nodes in your SolrCloud cluster.`}</p>\n    <p>{`  The number of replicas (replicationFactor) can be set according to the redundancy required.`}</p>\n    <p>{`  Also note that Apache Solr will automatically be called to create the indexes when Apache Atlas server is started if the\nSOLR_BIN and SOLR_CONF environment variables are set and the search indexing backend is set to 'solr5'.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Change ATLAS configuration to point to Apache Solr instance setup. Please make sure the following configurations are set to the below values in ATLAS_HOME/conf/atlas-application.properties`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.index.search.backend=solr\natlas.graph.index.search.solr.mode=cloud\natlas.graph.index.search.solr.zookeeper-url=<the ZK quorum setup for solr as comma separated value> eg: 10.1.6.4:2181,10.1.6.5:2181\natlas.graph.index.search.solr.zookeeper-connect-timeout=<SolrCloud Zookeeper Connection Timeout>. Default value is 60000 ms\natlas.graph.index.search.solr.zookeeper-session-timeout=<SolrCloud Zookeeper Session Timeout>. Default value is 60000 ms`}\n    </SyntaxHighlighter>\n    <p>{`For more information on JanusGraph solr configuration , please refer `}<a parentName=\"p\" {...{\n        \"href\": \"http://docs.janusgraph.org/0.2.0/solr.html\"\n      }}>{`http://docs.janusgraph.org/0.2.0/solr.html`}</a></p>\n    <p>{`Pre-requisites for running Apache Solr in cloud mode`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Memory - Apache Solr is both memory and CPU intensive. Make sure the server running Apache Solr has adequate memory, CPU and disk.\nApache Solr works well with 32GB RAM. Plan to provide as much memory as possible to Apache Solr process`}</li>\n      <li parentName=\"ul\">{`Disk - If the number of entities that need to be stored are large, plan to have at least 500 GB free space in the volume where Apache Solr is going to store the index data`}</li>\n      <li parentName=\"ul\">{`SolrCloud has support for replication and sharding. It is highly recommended to use SolrCloud with at least two Apache Solr nodes running on different servers with replication enabled.\nIf using SolrCloud, then you also need ZooKeeper installed and configured with 3 or 5 ZooKeeper nodes`}</li>\n    </ul>\n    <p><em parentName=\"p\">{`Configuring Elasticsearch as the indexing backend for the Graph Repository (Tech Preview)`}</em></p>\n    <p>{`By default, Apache Atlas uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://janusgraph.org/\"\n      }}>{`JanusGraph`}</a>{` as the graph repository and is the only graph repository implementation available currently. For configuring `}<a parentName=\"p\" {...{\n        \"href\": \"https://janusgraph.org/\"\n      }}>{`JanusGraph`}</a>{` to work with Elasticsearch, please follow the instructions below`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Install an Elasticsearch cluster. The version currently supported is 5.6.4, and can be acquired from: `}<a parentName=\"li\" {...{\n          \"href\": \"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.4.tar.gz\"\n        }}>{`https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.4.tar.gz`}</a></li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`For simple testing a single Elasticsearch node can be started by using the 'elasticsearch' command in the bin directory of the Elasticsearch distribution.`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Change Apache Atlas configuration to point to the Elasticsearch instance setup. Please make sure the following configurations are set to the below values in ATLAS_HOME/conf/atlas-application.properties`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.graph.index.search.backend=elasticsearch\natlas.graph.index.search.hostname=<the hostname(s) of the Elasticsearch master nodes comma separated>\natlas.graph.index.search.elasticsearch.client-only=true`}\n </SyntaxHighlighter>\n    <p>{`For more information on JanusGraph configuration for elasticsearch, please refer `}<a parentName=\"p\" {...{\n        \"href\": \"http://docs.janusgraph.org/0.2.0/elasticsearch.html\"\n      }}>{`http://docs.janusgraph.org/0.2.0/elasticsearch.html`}</a></p>\n    <h4 {...{\n      \"id\": \"configuring-kafka-topics\"\n    }}>{`Configuring Kafka Topics`}</h4>\n    <p>{`Apache Atlas uses Apache Kafka to ingest metadata from other components at runtime. This is described in the `}<a parentName=\"p\" {...{\n        \"href\": \"#/Architecture\"\n      }}>{`Architecture`}</a>{`\nin more detail. Depending on the configuration of Apache Kafka, sometimes you might need to setup the topics explicitly before\nusing Apache Atlas. To do so, Apache Atlas provides a script =bin/atlas_kafka_setup.py= which can be run from Apache Atlas server. In some\nenvironments, the hooks might start getting used first before Apache Atlas server itself is setup. In such cases, the topics\ncan be run on the hosts where hooks are installed using a similar script `}<inlineCode parentName=\"p\">{`hook-bin/atlas_kafka_setup_hook.py`}</inlineCode>{`. Both these\nuse configuration in `}<inlineCode parentName=\"p\">{`atlas-application.properties`}</inlineCode>{` for setting up the topics. Please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#/Configuration\"\n      }}>{`Configuration`}</a>{`\nfor these details.`}</p>\n    <h4 {...{\n      \"id\": \"setting-up-apache-atlas\"\n    }}>{`Setting up Apache Atlas`}</h4>\n    <p>{`There are a few steps that setup dependencies of Apache Atlas. One such example is setting up the JanusGraph schema in the storage backend of choice. In a simple single server setup, these are automatically setup with default configuration when the server first accesses these dependencies.`}</p>\n    <p>{`However, there are scenarios when we may want to run setup steps explicitly as one time operations. For example, in a multiple server scenario using `}<a parentName=\"p\" {...{\n        \"href\": \"#/HighAvailability\"\n      }}>{`High Availability`}</a>{`, it is preferable to run setup steps from one of the server instances the first time, and then start the services.`}</p>\n    <p>{`To run these steps one time, execute the command =bin/atlas_start.py -setup= from a single Apache Atlas server instance.`}</p>\n    <p>{`However, Apache Atlas server does take care of parallel executions of the setup steps. Also, running the setup steps multiple times is idempotent. Therefore, if one chooses to run the setup steps as part of server startup, for convenience, then they should enable the configuration option `}<inlineCode parentName=\"p\">{`atlas.server.run.setup.on.start`}</inlineCode>{` by defining it with the value `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`atlas-application.properties`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"examples-calling-apache-atlas-rest-apis\"\n    }}>{`Examples: calling Apache Atlas REST APIs`}</h3>\n    <p>{`Here are few examples of calling Apache Atlas REST APIs via curl command.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`List the types in the repository`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"powershell\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n  {`curl -u username:password http://localhost:21000/api/atlas/v2/types/typedefs/headers\n    [ {\"guid\":\"fa421be8-c21b-4cf8-a226-fdde559ad598\",\"name\":\"Referenceable\",\"category\":\"ENTITY\"},\n      {\"guid\":\"7f3f5712-521d-450d-9bb2-ba996b6f2a4e\",\"name\":\"Asset\",\"category\":\"ENTITY\"},\n      {\"guid\":\"84b02fa0-e2f4-4cc4-8b24-d2371cd00375\",\"name\":\"DataSet\",\"category\":\"ENTITY\"},\n      {\"guid\":\"f93975d5-5a5c-41da-ad9d-eb7c4f91a093\",\"name\":\"Process\",\"category\":\"ENTITY\"},\n      {\"guid\":\"79dcd1f9-f350-4f7b-b706-5bab416f8206\",\"name\":\"Infrastructure\",\"category\":\"ENTITY\"}\n    ]`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`List the instances for a given type`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"json\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n  {`curl -u username:password http://localhost:21000/api/atlas/v2/search/basic?typeName=hive_db\n    {\n      \"queryType\":\"BASIC\",\n      \"searchParameters\":{\n        \"typeName\":\"hive_db\",\n        \"excludeDeletedEntities\":false,\n        \"includeClassificationAttributes\":false,\n        \"includeSubTypes\":true,\n        \"includeSubClassifications\":true,\n        \"limit\":100,\n        \"offset\":0\n      },\n      \"entities\":[\n        {\n          \"typeName\":\"hive_db\",\n          \"guid\":\"5d900c19-094d-4681-8a86-4eb1d6ffbe89\",\n          \"status\":\"ACTIVE\",\n          \"displayText\":\"default\",\n          \"classificationNames\":[],\n          \"attributes\":{\n            \"owner\":\"public\",\n            \"createTime\":null,\n            \"qualifiedName\":\"default@cl1\",\n            \"name\":\"default\",\n            \"description\":\"Default Hive database\"\n          }\n        },\n        {\n          \"typeName\":\"hive_db\",\n          \"guid\":\"3a0b14b0-ab85-4b65-89f2-e418f3f7f77c\",\n          \"status\":\"ACTIVE\",\n          \"displayText\":\"finance\",\n          \"classificationNames\":[],\n          \"attributes\":{\n            \"owner\":\"hive\",\n            \"createTime\":null,\n            \"qualifiedName\":\"finance@cl1\",\n            \"name\":\"finance\",\n            \"description\":null\n          }\n        }\n      ]\n    }`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`Search for entities`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"json\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n  {`curl -u username:password http://localhost:21000/api/atlas/v2/search/dsl?query=hive_db%20where%20name='default'\n      {\n        \"queryType\":\"DSL\",\n        \"queryText\":\"hive_db where name='default'\",\n        \"entities\":[\n          {\n            \"typeName\":\"hive_db\",\n            \"guid\":\"5d900c19-094d-4681-8a86-4eb1d6ffbe89\",\n            \"status\":\"ACTIVE\",\n            \"displayText\":\"default\",\n            \"classificationNames\":[],\n            \"attributes\":{\n              \"owner\":\"public\",\n              \"createTime\":null,\n              \"qualifiedName\":\"default@cl1\",\n              \"name\":\"default\",\n              \"description\":\n              \"Default Hive database\"\n            }\n          }\n        ]\n      }`}\n    </SyntaxHighlighter>\n    <h3 {...{\n      \"id\": \"troubleshooting\"\n    }}>{`Troubleshooting`}</h3>\n    <h4 {...{\n      \"id\": \"setup-issues\"\n    }}>{`Setup issues`}</h4>\n    <p>{`If the setup of Apache Atlas service fails due to any reason, the next run of setup (either by an explicit invocation of\n`}<inlineCode parentName=\"p\">{`atlas_start.py -setup`}</inlineCode>{` or by enabling the configuration option `}<inlineCode parentName=\"p\">{`atlas.server.run.setup.on.start`}</inlineCode>{`) will fail with\na message such as `}<inlineCode parentName=\"p\">{`A previous setup run may not have completed cleanly.`}</inlineCode>{`. In such cases, you would need to manually\nensure the setup can run and delete the Zookeeper node at `}<inlineCode parentName=\"p\">{`/apache_atlas/setup_in_progress`}</inlineCode>{` before attempting to\nrun setup again.`}</p>\n    <p>{`If the setup failed due to Apache HBase schema setup errors, it may be necessary to repair Apache HBase schema. If no\ndata has been stored, one can also disable and drop the Apache HBase tables used by Apache Atlas and run setup again.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}