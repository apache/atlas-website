{"version":3,"sources":["/home/madhan/Apache/git/atlas/docs/target/src/documents/HighAvailability.md","/home/madhan/Apache/git/atlas/docs/target/theme/styles/styled-colors.js"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","wrapLines","language","style","theme","isMDXComponent","dark","hljs","color"],"mappings":"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","file":"static/js/documents-high-availability.5a25fd47.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport  themen  from 'theme/styles/styled-colors';\nimport  * as theme  from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"fault-tolerance-and-high-availability-options\"\n    }}>{`Fault Tolerance and High Availability Options`}</h1>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`Apache Atlas uses and interacts with a variety of systems to provide metadata management and data lineage to data\nadministrators. By choosing and configuring these dependencies appropriately, it is possible to achieve a high degree\nof service availability with Atlas. This document describes the state of high availability support in Atlas,\nincluding its capabilities and current limitations, and also the configuration required for achieving this level of\nhigh availability.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#/Architecture\"\n      }}>{`The architecture page`}</a>{` in the wiki gives an overview of the various components that make up Atlas.\nThe options mentioned below for various components derive context from the above page, and would be worthwhile to\nreview before proceeding to read this page.`}</p>\n    <h2 {...{\n      \"id\": \"atlas-web-service\"\n    }}>{`Atlas Web Service`}</h2>\n    <p>{`Currently, the Atlas Web Service has a limitation that it can only have one active instance at a time. In earlier\nreleases of Atlas, a backup instance could be provisioned and kept available. However, a manual failover was\nrequired to make this backup instance active.`}</p>\n    <p>{`From this release, Atlas will support multiple instances of the Atlas Web service in an active/passive configuration\nwith automated failover. This means that users can deploy and start multiple instances of the Atlas Web Service on\ndifferent physical hosts at the same time. One of these instances will be automatically selected as an 'active'\ninstance to service user requests. The others will automatically be deemed 'passive'. If the 'active' instance\nbecomes unavailable either because it is deliberately stopped, or due to unexpected failures, one of the other\ninstances will automatically be elected as an 'active' instance and start to service user requests.`}</p>\n    <p>{`An 'active' instance is the only instance that can respond to user requests correctly. It can create, delete, modify\nor respond to the queries on metadata objects. A 'passive' instance will accept user requests, but will redirect them\nusing HTTP redirect to the currently known 'active' instance. Specifically, a passive instance will not itself\nrespond to any queries on metadata objects. However, all instances (both active and passive), will respond to admin\nrequests that return information about that instance.`}</p>\n    <p>{`When configured in a High Availability mode, users can get the following operational benefits:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Uninterrupted service during maintenance intervals`}</strong>{`: If an active instance of the Atlas Web Service needs to be brought down for maintenance, another instance would automatically become active and can service requests.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Uninterrupted service in event of unexpected failures`}</strong>{`: If an active instance of the Atlas Web Service fails due to software or hardware errors, another instance would automatically become active and can service requests.`}</li>\n    </ul>\n    <p>{`In the following sub-sections, we describe the steps required to setup High Availability for the Atlas Web Service.\nWe also describe how the deployment and client can be designed to take advantage of this capability.\nFinally, we describe a few details of the underlying implementation.`}</p>\n    <h3 {...{\n      \"id\": \"setting-up-the-high-availability-feature-in-atlas\"\n    }}>{`Setting up the High Availability feature in Atlas`}</h3>\n    <p>{`The following pre-requisites must be met for setting up the High Availability feature.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Ensure that you install Apache Zookeeper on a cluster of machines (a minimum of 3 servers is recommended for production).`}</li>\n      <li parentName=\"ul\">{`Select 2 or more physical machines to run the Atlas Web Service instances on. These machines define what we refer to as a 'server ensemble' for Atlas.`}</li>\n    </ul>\n    <p>{`To setup High Availability in Atlas, a few configuration options must be defined in the `}<inlineCode parentName=\"p\">{`atlas-application.properties`}</inlineCode>{`\nfile. While the complete list of configuration items are defined in the `}<a parentName=\"p\" {...{\n        \"href\": \"#/Configuration\"\n      }}>{`Configuration Page`}</a>{`, this\nsection lists a few of the main options.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`High Availability is an optional feature in Atlas. Hence, it must be enabled by setting the configuration option `}<inlineCode parentName=\"li\">{`atlas.server.ha.enabled`}</inlineCode>{` to true.`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Next, define a list of identifiers, one for each physical machine you have selected for the Atlas Web Service instance. These identifiers can be simple strings like `}<inlineCode parentName=\"li\">{`id1`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`id2`}</inlineCode>{` etc. They should be unique and should not contain a comma.`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Define a comma separated list of these identifiers as the value of the option `}<inlineCode parentName=\"li\">{`atlas.server.ids`}</inlineCode>{`.`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`For each physical machine, list the IP Address/hostname and port as the value of the configuration `}<inlineCode parentName=\"li\">{`atlas.server.address.id`}</inlineCode>{`, where `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{` refers to the identifier string for this physical machine.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`For e.g., if you have selected 2 machines with hostnames `}<inlineCode parentName=\"li\">{`host1.company.com`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`host2.company.com`}</inlineCode>{`, you can define the configuration options as below:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`atlas.server.ids=id1,id2\natlas.server.address.id1=host1.company.com:21000\natlas.server.address.id2=host2.company.com:21000`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`Define the Zookeeper quorum which will be used by the Atlas High Availability feature.`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      atlas.server.ha.zookeeper.connect=zk1.company.com:2181,zk2.company.com:2181,zk3.company.com:2181\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`You can review other configuration options that are defined for the High Availability feature, and set them up as desired in the `}<inlineCode parentName=\"li\">{`atlas-application.properties`}</inlineCode>{` file.`}</li>\n      <li parentName=\"ul\">{`For production environments, the components that Atlas depends on must also be set up in High Availability mode. This is described in detail in the following sections. Follow those instructions to setup and configure them.`}</li>\n      <li parentName=\"ul\">{`Install the Atlas software on the selected physical machines.`}</li>\n      <li parentName=\"ul\">{`Copy the `}<inlineCode parentName=\"li\">{`atlas-application.properties`}</inlineCode>{` file created using the steps above to the configuration directory of all the machines.`}</li>\n      <li parentName=\"ul\">{`Start the dependent components.`}</li>\n      <li parentName=\"ul\">{`Start each instance of the Atlas Web Service.`}</li>\n    </ul>\n    <p>{`To verify that High Availability is working, run the following script on each of the instances where Atlas Web Service\nis installed.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n$ATLAS_HOME/bin/atlas_admin.py -status\n    </SyntaxHighlighter>\nThis script can print one of the values below as response:\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ACTIVE`}</strong>{`: This instance is active and can respond to user requests.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`PASSIVE`}</strong>{`: This instance is PASSIVE. It will redirect any user requests it receives to the current active instance.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`BECOMING_ACTIVE`}</strong>{`: This would be printed if the server is transitioning to become an ACTIVE instance. The server cannot service any metadata user requests in this state.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`BECOMING_PASSIVE`}</strong>{`: This would be printed if the server is transitioning to become a PASSIVE instance. The server cannot service any metadata user requests in this state.`}</li>\n    </ul>\n    <p>{`Under normal operating circumstances, only one of these instances should print the value `}<em parentName=\"p\">{`ACTIVE`}</em>{` as response to\nthe script, and the others would print `}<em parentName=\"p\">{`PASSIVE`}</em>{`.`}</p>\n    <h3 {...{\n      \"id\": \"configuring-clients-to-use-the-high-availability-feature\"\n    }}>{`Configuring clients to use the High Availability feature`}</h3>\n    <p>{`The Atlas Web Service can be accessed in two ways:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Using the Atlas Web UI`}</strong>{`: This is a browser based client that can be used to query the metadata stored in Atlas.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Using the Atlas REST API`}</strong>{`: As Atlas exposes a RESTful API, one can use any standard REST client including libraries in other applications. In fact, Atlas ships with a client called AtlasClient that can be used as an example to build REST client access.`}</li>\n    </ul>\n    <p>{`In order to take advantage of the High Availability feature in the clients, there are two options possible.`}</p>\n    <h4 {...{\n      \"id\": \"using-an-intermediate-proxy\"\n    }}>{`Using an intermediate proxy`}</h4>\n    <p>{`The simplest solution to enable highly available access to Atlas is to install and configure some intermediate proxy\nthat has a capability to transparently switch services based on status. One such proxy solution is `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.haproxy.org/\"\n      }}>{`HAProxy`}</a>{`.`}</p>\n    <p>{`Here is an example HAProxy configuration that can be used. Note this is provided for illustration only, and not as a\nrecommended production configuration. For that, please refer to the HAProxy documentation for appropriate instructions.`}</p>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n      {`frontend atlas_fe\n  bind *:41000\n  default_backend atlas_be\nbackend atlas_be\n  mode http\n  option httpchk get /api/atlas/admin/status\n  http-check expect string ACTIVE\n  balance roundrobin\n  server host1_21000 host1:21000 check\n  server host2_21000 host2:21000 check backup\nlisten atlas\n  bind localhost:42000`}\n    </SyntaxHighlighter>\n    <p>{`The above configuration binds HAProxy to listen on port 41000 for incoming client connections. It then routes\nthe connections to either of the hosts host1 or host2 depending on a HTTP status check. The status check is\ndone using a HTTP GET on the REST URL `}<inlineCode parentName=\"p\">{`/api/atlas/admin/status`}</inlineCode>{`, and is deemed successful only if the HTTP response\ncontains the string ACTIVE.`}</p>\n    <h4 {...{\n      \"id\": \"using-automatic-detection-of-active-instance\"\n    }}>{`Using automatic detection of active instance`}</h4>\n    <p>{`If one does not want to setup and manage a separate proxy, then the other option to use the High Availability\nfeature is to build a client application that is capable of detecting status and retrying operations. In such a\nsetting, the client application can be launched with the URLs of all Atlas Web Service instances that form the\nensemble. The client should then call the REST URL `}<inlineCode parentName=\"p\">{`/api/atlas/admin/status`}</inlineCode>{` on each of these to determine which is\nthe active instance. The response from the Active instance would be of the form `}<inlineCode parentName=\"p\">{`{Status:ACTIVE}`}</inlineCode>{`. Also, when the\nclient faces any exceptions in the course of an operation, it should again determine which of the remaining URLs\nis active and retry the operation.`}</p>\n    <p>{`The AtlasClient class that ships with Atlas can be used as an example client library that implements the logic\nfor working with an ensemble and selecting the right Active server instance.`}</p>\n    <p>{`Utilities in Atlas, like `}<inlineCode parentName=\"p\">{`quick_start.py`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`import-hive.sh`}</inlineCode>{` can be configured to run with multiple server\nURLs. When launched in this mode, the AtlasClient automatically selects and works with the current active instance.\nIf a proxy is set up in between, then its address can be used when running quick_start.py or import-hive.sh.`}</p>\n    <h3 {...{\n      \"id\": \"implementation-details-of-atlas-high-availability\"\n    }}>{`Implementation Details of Atlas High Availability`}</h3>\n    <p>{`The Atlas High Availability work is tracked under the master JIRA\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://issues.apache.org/jira/browse/ATLAS-510\"\n      }}>{`ATLAS-510`}</a>{`.\nThe JIRAs filed under it have detailed information about how the High Availability feature has been implemented.\nAt a high level the following points can be called out:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The automatic selection of an Active instance, as well as automatic failover to a new Active instance happen through a leader election algorithm.`}</li>\n      <li parentName=\"ul\">{`For leader election, we use the `}<a parentName=\"li\" {...{\n          \"href\": \"http://curator.apache.org/curator-recipes/leader-latch.html\"\n        }}>{`Leader Latch Recipe`}</a>{` of `}<a parentName=\"li\" {...{\n          \"href\": \"http://curator.apache.org\"\n        }}>{`Apache Curator`}</a></li>\n      <li parentName=\"ul\">{`The Active instance is the only one which initializes, modifies or reads state in the backend stores to keep them consistent.`}</li>\n      <li parentName=\"ul\">{`Also, when an instance is elected as Active, it refreshes any cached information from the backend stores to get up to date.`}</li>\n      <li parentName=\"ul\">{`A servlet filter ensures that only the active instance services user requests. If a passive instance receives these requests, it automatically redirects them to the current active instance.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"metadata-store\"\n    }}>{`Metadata Store`}</h2>\n    <p>{`As described above, Atlas uses JanusGraph to store the metadata it manages. By default, Atlas uses a standalone HBase\ninstance as the backing store for JanusGraph. In order to provide HA for the metadata store, we recommend that Atlas be\nconfigured to use distributed HBase as the backing store for JanusGraph.  Doing this implies that you could benefit from the\nHA guarantees HBase provides. In order to configure Atlas to use HBase in HA mode, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Choose an existing HBase cluster that is set up in HA mode to configure in Atlas (OR) Set up a new HBase cluster in `}<a parentName=\"li\" {...{\n          \"href\": \"http://hbase.apache.org/book.html#quickstart_fully_distributed\"\n        }}>{`HA mode`}</a>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If setting up HBase for Atlas, please following instructions listed for setting up HBase in the `}<a parentName=\"li\" {...{\n              \"href\": \"#/Installation\"\n            }}>{`Installation Steps`}</a>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`We recommend using more than one HBase masters (at least 2) in the cluster on different physical hosts that use Zookeeper for coordination to provide redundancy and high availability of HBase.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Refer to the `}<a parentName=\"li\" {...{\n              \"href\": \"#/Configuration\"\n            }}>{`Configuration page`}</a>{` for the options to configure in atlas.properties to setup Atlas with HBase.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"index-store\"\n    }}>{`Index Store`}</h2>\n    <p>{`As described above, Atlas indexes metadata through JanusGraph to support full text search queries. In order to provide HA\nfor the index store, we recommend that Atlas be configured to use Solr or Elasticsearch as the backing index store for JanusGraph.`}</p>\n    <h3 {...{\n      \"id\": \"solr\"\n    }}>{`Solr`}</h3>\n    <p>{`In order to configure Atlas to use Solr in HA mode, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Choose an existing SolrCloud cluster setup in HA mode to configure in Atlas (OR) Set up a new `}<a parentName=\"li\" {...{\n          \"href\": \"https://cwiki.apache.org/confluence/display/solr/SolrCloud\"\n        }}>{`SolrCloud cluster`}</a>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Ensure Solr is brought up on at least 2 physical hosts for redundancy, and each host runs a Solr node.`}</li>\n          <li parentName=\"ul\">{`We recommend the number of replicas to be set to at least 2 for redundancy.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Create the SolrCloud collections required by Atlas, as described in `}<a parentName=\"li\" {...{\n          \"href\": \"#/Installation\"\n        }}>{`Installation Steps`}</a></li>\n      <li parentName=\"ul\">{`Refer to the `}<a parentName=\"li\" {...{\n          \"href\": \"#/Configuration\"\n        }}>{`Configuration page`}</a>{` for the options to configure in atlas.properties to setup Atlas with Solr.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"elasticsearch--tech-preview\"\n    }}>{`Elasticsearch  (Tech Preview)`}</h3>\n    <p>{`In order to configure Atlas to use Elasticsearch in HA mode, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Choose an existing Elasticsearch cluster setup, (OR) setup a new cluster `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.elastic.co/guide/en/elasticsearch/reference/5.6/setup.html\"\n        }}>{`Elasticsearch cluster`}</a>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Ensure that Elasticsearch is brought up on at least five physical hosts for redundancy.`}</li>\n          <li parentName=\"ul\">{`A replica count of 3 is recommended`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Refer to the `}<a parentName=\"li\" {...{\n          \"href\": \"#/Configuration\"\n        }}>{`Configuration page`}</a>{` for the options to configure in atlas.properties to setup Atlas with Elasticsearch.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"notification-server\"\n    }}>{`Notification Server`}</h2>\n    <p>{`Metadata notification events from Hooks are sent to Atlas by writing them to a Kafka topic called `}<strong parentName=\"p\">{`ATLAS_HOOK`}</strong>{`. Similarly, events from\nAtlas to other integrating components like Ranger, are written to a Kafka topic called `}<strong parentName=\"p\">{`ATLAS_ENTITIES`}</strong>{`. Since Kafka\npersists these messages, the events will not be lost even if the consumers are down as the events are being sent. In\naddition, we recommend Kafka is also setup for fault tolerance so that it has higher availability guarantees. In order\nto configure Atlas to use Kafka in HA mode, do the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Choose an existing Kafka cluster set up in HA mode to configure in Atlas (OR) Set up a new Kafka cluster.`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`We recommend that there are more than one Kafka brokers in the cluster on different physical hosts that use Zookeeper for coordination to provide redundancy and high availability of Kafka.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Setup at least 2 physical hosts for redundancy, each hosting a Kafka broker.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Set up Kafka topics for Atlas usage:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The number of partitions for the ATLAS topics should be set to 1 (numPartitions)`}</li>\n          <li parentName=\"ul\">{`Decide number of replicas for Kafka topic: Set this to at least 2 for redundancy.`}</li>\n          <li parentName=\"ul\">{`Run the following commands:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n   {`$KAFKA_HOME/bin/kafka-topics.sh --create --zookeeper <list of zookeeper host:port entries> --topic ATLAS_HOOK --replication-factor <numReplicas> --partitions 1\n   $KAFKA_HOME/bin/kafka-topics.sh --create --zookeeper <list of zookeeper host:port entries> --topic ATLAS_ENTITIES --replication-factor <numReplicas> --partitions 1\n   Here KAFKA_HOME points to the Kafka installation directory.`}\n    </SyntaxHighlighter>\n    <ul>\n      <li parentName=\"ul\">{`In atlas-application.properties, set the following configuration:`}</li>\n    </ul>\n    <SyntaxHighlighter wrapLines={true} language=\"java\" style={theme.dark} mdxType=\"SyntaxHighlighter\">\n   {`atlas.notification.embedded=false\n   atlas.kafka.zookeeper.connect=<comma separated list of servers forming Zookeeper quorum used by Kafka>\n   atlas.kafka.bootstrap.servers=<comma separated list of Kafka broker endpoints in host:port form> - Give at least 2 for redundancy.`}\n    </SyntaxHighlighter>\n    <h2 {...{\n      \"id\": \"known-issues\"\n    }}>{`Known Issues`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`If the HBase region servers hosting the Atlas table are down, Atlas would not be able to store or retrieve metadata from HBase until they are brought back online.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\n//dark[\"powershell\"][\"color\"] = \"#37bb9b\";\ndark.hljs.color = \"#37bb9b\";\nexport default dark;"],"sourceRoot":""}